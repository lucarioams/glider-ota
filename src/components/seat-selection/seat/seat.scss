
// Define elements of a seat
.seat {
    // Behavior of elements
    display: flex;
    justify-content: center;
    align-items: center;
    border-bottom: unset;
    padding: 10px 2.6px; /*19.19px 5.39px; /2*/

    // Checkbox is hidden
    // But needed for screen-reader and select state logic
    input {
        transform: scale(0);
        opacity: 0;
        position: fixed;
        margin: 0px;
    }

    // Selection of the checkbox is made with the associated label
    label {
        /* Square */
        width: 27.6px;
        height: 27.6px;
        left: calc(50% - 27.6px/2 - 0px);
        top: calc(50% - 27.6px/2 + 0px);
        position: relative;
        margin: 0px;

        /* Elements disposition */
        display: flex;
        justify-content: center;
        align-items: center;

        /* Background */
        background-color: #202020;

        /* Effects */
        cursor: pointer;
        user-select: none;
        transition: background-color .3s, box-shadow .3s;

        // Price text element
        .price {
            /* Text for the price seat */
            text-align: center;
            color: #FFFFFF;
            white-space: nowrap;
            font-style: normal;
            font-weight: 500;
            font-size: 8px;
            line-height: 150%;
        }

        // Premium seat indicator
        .premium {
            /* Golden dot */
            border-radius: 50%;
            background-color: #ff9d55;
            position: absolute;
            width: 6px;
            height: 6px;
            transform: translate(150%, 150%);
        }
    }

    // Seat state when focused
    label:hover, input:focus + label {
        box-shadow: 0 0 10px rgba(0, 0, 0, .6);
    }

    // Seat state when selected
    input:checked + label {
        background: url(../../../assets/tick.svg), #7161D6;
        background-repeat: no-repeat;
        background-position: center;
        background-size: 85%;
    }

    // Seat state when disabled (= occupied)
    input:disabled + label {
        background: url(../../../assets/cross.svg), #BBBBBB;
        background-repeat: no-repeat;
        background-position: center;
        background-size: 120%;
        box-shadow: 0 0 0px rgba(0, 0, 0, .6);
        cursor: not-allowed;
    }

}

// Define elements of the plane drawing
.plane {
    // The table is the main body of the plane
    table {
        border-collapse: unset;
        border-spacing: 0px;
        text-align: center;
        font-style: normal;
        font-weight: normal;
        color: #202020;
        //background-clip: padding-box;
    }

    // Header row with the column letters
    th {
        font-size: 13px;
        line-height: 115%;
        padding-bottom: 18px;
        font-weight: normal;
    }

    // Keep the border on the header
    th:last-child {
        border-left: 1.15px solid #BBBBBB;
    }
    th:first-child {
        border-right: 1.15px solid #BBBBBB;
    }


    // Each cell is a space on the plane: seat, aisle, wing, air
    td, tr {
        padding: 0;
        border-bottom: 0px;
        border-top: 0px;

    }

    // Wing template
    %wing {
        width: 41.4px;
        background: #e9e9e9;
        border-bottom: 1.15px solid #BBBBBB;
        vertical-align: top;
    }

    // Left Wing
    .wing-left {
        @extend %wing;
        border-right: 1.15px solid #BBBBBB;
        clip-path: polygon(0 41.4px, calc(100% - 1.15px) 0, 100% 0, 100% 100%, 0 100%);
    }

    // Right Wing
    .wing-right {
        @extend %wing;
        border-left: 1.15px solid #BBBBBB;
        clip-path: polygon(0% 0%, 1.15px 0%, 100% 41.4px, 100% 100%, 0% 100%);
    }

    // The air on the left side of the cabin
    .air-left {
        border-right: 1.15px solid #BBBBBB;
    }

    // The air on the right side of the cabin
    .air-right {
        border-left: 1.15px solid #BBBBBB;
    }

    // Aisle where the rows are displayed
    .aisle {
        font-size: 11.5px;
        line-height: 150%;
    }
}

